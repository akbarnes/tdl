# tdl is a subset of tcl for storing structured data
# Comments start with a hash sign

# Scalar types

# Variables with trailing underscores aren't returned
# This is useful for intermediate values
set a 42
set b 32.5
set c false

# $ referencing is supported
set d $a


# this will give the string value "$a"
set d \$a 

# \n gives a newline
set g hello\nthere

# String types
set e "The answer is 42."

# quotes are optional
set g The answer is 37.5

# list of scalars
# list amounts 10 33 18
set amounts list 10 33 18

# add to a list
list_cat amounts list 75 83 89

# list of other objects

# create an empty list
set items list 
list_append items 1 map a 2 b 3
list_set items 1 map a 3 b 4
lapp tems 2 map a 7 c 70
lset items 2 map a 7 c 77


# hashmap
set h0 hash
set h hash a 2 b 3 c 33.5

hash_set e a 32
hset a b 37.5

# intermediate variables are cleared
clear a b c

# Extended tidl
# -------------------------------------------

# Most importantly, nested indexing is possible
set items[2,1] map a 7 b 5
set h.a[3].b 7

# When the tdl parser encounters a value without set, 
# it is returned immediately and the parser stops
# This isn't supported in minimal tdl
77.3

# The return keyword makes returning values explicit
return 77.3

# trailing underscore variables aren't returned
set d_ 33
set h.c $d_